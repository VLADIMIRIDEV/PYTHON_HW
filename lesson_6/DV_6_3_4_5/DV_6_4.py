# 4. * (вместо 3) Решить задачу 3 для ситуации, когда объём данных в файлах превышает объём ОЗУ
# (разумеется, не нужно реально создавать такие большие файлы, это просто задел на будущее проекта).
# Также реализовать парсинг данных из файлов — получить отдельно фамилию,
# имя и отчество для пользователей и название каждого хобби: преобразовать в какой-нибудь
# контейнерный тип (список, кортеж, множество, словарь). Обосновать выбор типа.
# Подумать, какие могут возникнуть проблемы при парсинге. В словаре должны храниться данные,
# полученные в результате парсинга.

from itertools import zip_longest

with open('users.csv', 'r', encoding='utf-8') as users:
    with open('hobbies.csv', 'r', encoding='utf-8') as hobbies:
        all_list = zip_longest(users, hobbies, fillvalue=None)

        with open('users_hobbies.txt', 'w', encoding='utf-8') as f:
            for i in all_list:
                print(f'{str(i[0]).strip()}: {str(i[1]).strip()}', file=f)
