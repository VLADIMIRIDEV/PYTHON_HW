# 3. Создать собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
# пользователя данные и заполнять список необходимо только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и
# строки. Во время ввода пользователем очередного элемента необходимо реализовать
# проверку типа элемента. Вносить его в список, только если введено число. Класс-исключение
# должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться.
class MyExcept(Exception):
	def __init__(self, text):
		self.text = text


def make_digit_list(user_digit=0):
	user_digit_list = list()
	while user_digit != 'exit':
		try:
			user_digit = input('Please input digit: ')
			if not user_digit.isdigit():
				raise MyExcept(f'Number {user_digit} is not a digit.')
			user_digit_list.append(user_digit)
			print(f'The {user_digit} is added to user_digit_list')
		except MyExcept as err:
			print(err)
		print(f'Digit list: {user_digit_list}')


if __name__ == '__main__':
	make_digit_list()